rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Kullanıcının authenticate olup olmadığını kontrol et
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Kullanıcının kendi verilerine erişim kontrolü
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Odaya üye olup olmadığını kontrol et
    function isRoomMember(roomId) {
      return isAuthenticated();
    }

    // Kullanıcı profilleri
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Odalar - ana koleksiyon
    match /rooms/{roomId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.createdBy;
      allow update: if isAuthenticated() && (
        request.auth.uid == resource.data.createdBy
      );
      allow delete: if isAuthenticated() && request.auth.uid == resource.data.createdBy;
    }

    // Oda alt koleksiyonları
    match /rooms/{roomId}/{document=**} {
      allow read, write: if isRoomMember(roomId);
    }

    // Poop kayıtları
    match /poops/{poopId} {
      allow read: if true; // Global liderlik tablosu için herkes okuyabilir
      allow create: if isAuthenticated() && 
                      isOwner(request.resource.data.userId) &&
                      request.resource.data.roomId is string &&
                      request.resource.data.characterId is string;
      allow update, delete: if isAuthenticated() && isOwner(resource.data.userId);
    }

    // Global leaderboard - sadece okuma
    match /leaderboard/{document} {
      allow read: if isAuthenticated();
      allow write: if false; // Sadece server tarafından güncellenebilir
    }

    // Karakterler - herkes okuyabilir (liderlik tablosu için)
    match /characters/{characterId} {
      allow read: if true; // Global liderlik tablosu için herkes okuyabilir
      allow create, update, delete: if isAuthenticated() && 
                                      request.auth.uid == request.resource.data.userId;
    }

    // Achievements - sadece kullanıcının kendi başarımları
    match /achievements/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Admin koleksiyonu - sadece admin'ler
    match /admin/{document=**} {
      allow read, write: if isAuthenticated() && 
                          request.auth.token.admin == true;
    }
  }
}


